name: Common Build and Deploy to Sandbox
on:
  workflow_call:
    inputs:
      needs_build:
        description: 'Whether to build or not'
        required: true
        type: boolean
        default: false
      needs_export:
        required: false
        type: boolean
        default: false
      install_command:
        description: 'Command to run to install dependencies'
        type: string
        required: false
      cloud_deploy:
        required: true
        type: boolean
        default: false
      skip_deploy:
        required: false
        type: boolean
        default: false
      env:
        required: false
        type: string
        default: quai-sandbox
      build_command:
        description: 'Command to run to build'
        type: string
        required: false
        default: 'npm run build'
      needs_docker:
          required: false
          type: boolean
          default: false
      include_chart:
          required: false
          type: boolean
          default: true
      update_version:
          required: false
          type: boolean
          default: true
      name_override:
          required: false
          type: string
      gcp_project_id:
        required: false
        type: string
      token_secret_name:
        required: false
        type: string
    secrets:
      GH_PAT:
        description: 'needed for github login'
        required: true
      DOCKER:
        description: 'needed for registry login'
        required: false
      KUBE_CONFIG:
        description: 'needed for kube setup'
        required: false
      BUILD_ARGS:
        description: 'needed for build args'
        required: false
      DOCKER_BUILD_ARGS:
        description: 'needed for docker build args'
        required: false
      GPG_PRIVATE_KEY:
        description: 'needed for gpg signing'
        required: false
      GPG_KEY_ID:
        description: 'needed for gpg signing'
        required: false
      GH_GCP_TOKEN:
        description: 'needed for gcp login'
        required: false
jobs:
  detect-language:
    runs-on: ubuntu-latest
    outputs:
      language: ${{ env.detected-language }}

    steps:
      - uses: actions/checkout@v2

      - name: Detect Language
        id: set-language
        run: |
          if [[ -f "package.json" && ! -f "tsconfig.json" ]]; then
            echo "detected-language=javascript" >> $GITHUB_ENV
            echo "detected-language=javascript"
          elif [[ -f "tsconfig.json" ]]; then
            echo "detected-language=typescript" >> $GITHUB_ENV
          elif [[ -f "go.mod" ]]; then
            echo "detected-language=go" >> $GITHUB_ENV
          elif [[ -f "mix.exs" ]]; then
            echo "detected-language=elixir" >> $GITHUB_ENV
          else
            echo "detected-language=unknown" >> $GITHUB_ENV
          fi
          echo "testing"

  buildDeploySandboxJS:
    needs: detect-language
    if: needs.detect-language.outputs.language == 'javascript'
    uses: ./.github/workflows/build-deploy-js.yml
    secrets:
      DOCKER: ${{ secrets.DOCKER }}
      GH_PAT: ${{ secrets.GH_PAT }}
      KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      DOCKER_BUILD_ARGS: ${{ secrets.DOCKER_BUILD_ARGS }}
      BUILD_ARGS: ${{ secrets.BUILD_ARGS }}
      GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
      GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
      GH_GCP_TOKEN: ${{ secrets.GH_GCP_TOKEN }}
    with:
      env: ${{ inputs.env }}
      update_version_command: "jq --arg new_version \"v$(npx semver -i patch $(jq -r '.version' package.json | sed 's/^v//'))\" '.version = $new_version' package.json > temp.json && mv temp.json package.json"
      rails: '[[ ! "$VERSION" =~ "pre" ]]'
      update_version: ${{ inputs.update_version }}
      cloud_deploy: ${{ inputs.cloud_deploy }}
      needs_build: ${{ inputs.needs_build }}
      needs_export: ${{ inputs.needs_export }}
      install_command: ${{ inputs.install_command }}
      skip_deploy: ${{ inputs.skip_deploy }}
      name_override: ${{ inputs.name_override }}
      gcp_project_id: ${{ inputs.gcp_project_id }}
      token_secret_name: ${{ inputs.token_secret_name }}
      needs_docker: ${{ inputs.needs_docker }}
      build_command: ${{ inputs.build_command }}
      include_chart: ${{ inputs.include_chart }}

  buildDeploySandboxTS:
    needs: detect-language
    if: needs.detect-language.outputs.language == 'typescript'
    uses: ./.github/workflows/build-deploy-ts.yml
    secrets:
      DOCKER: ${{ secrets.DOCKER }}
      GH_PAT: ${{ secrets.GH_PAT }}
      KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      DOCKER_BUILD_ARGS: ${{ secrets.DOCKER_BUILD_ARGS }}
      BUILD_ARGS: ${{ secrets.BUILD_ARGS }}
      GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
      GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
      GH_GCP_TOKEN: ${{ secrets.GH_GCP_TOKEN }}
    with:
      env: ${{ inputs.env }}
      update_version_command: "jq --arg new_version \"v$(npx semver -i patch $(jq -r '.version' package.json | sed 's/^v//'))\" '.version = $new_version' package.json > temp.json && mv temp.json package.json"
      rails: '[[ ! "$VERSION" =~ "pre" ]]'
      update_version: ${{ inputs.update_version }}
      cloud_deploy: ${{ inputs.cloud_deploy }}
      needs_build: ${{ inputs.needs_build }}
      needs_export: ${{ inputs.needs_export }}
      install_command: ${{ inputs.install_command }}
      skip_deploy: ${{ inputs.skip_deploy }}
      name_override: ${{ inputs.name_override }}
      gcp_project_id: ${{ inputs.gcp_project_id }}
      token_secret_name: ${{ inputs.token_secret_name }}
      needs_docker: ${{ inputs.needs_docker }}
      build_command: ${{ inputs.build_command }}
      include_chart: ${{ inputs.include_chart }}

  buildDeploySandboxGo:
    needs: detect-language
    if: needs.detect-language.outputs.language == 'go'
    uses: ./.github/workflows/build-deploy-go.yml
    secrets:
      DOCKER: ${{ secrets.DOCKER }}
      GH_PAT: ${{ secrets.GH_PAT }}
      KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      DOCKER_BUILD_ARGS: ${{ secrets.DOCKER_BUILD_ARGS }}
      BUILD_ARGS: ${{ secrets.BUILD_ARGS }}
      GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
      GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
      GH_GCP_TOKEN: ${{ secrets.GH_GCP_TOKEN }}
    with:
      env: ${{ inputs.env }}
      update_version_command: "echo \"v$(semver -i patch $(sed 's/^v//' VERSION))\" > VERSION"
      rails: '[[ ! "$VERSION" =~ "pre" ]]'
      update_version: ${{ inputs.update_version }}
      cloud_deploy: ${{ inputs.cloud_deploy }}
      needs_build: ${{ inputs.needs_build }}
      install_command: ${{ inputs.install_command }}
      skip_deploy: ${{ inputs.skip_deploy }}
      build_command: ${{ inputs.build_command }}
      needs_docker: ${{ inputs.needs_docker }}
      include_chart: false
      name_override: ${{ inputs.name_override }}
      gcp_project_id: ${{ inputs.gcp_project_id }}
      token_secret_name: ${{ inputs.token_secret_name }}
